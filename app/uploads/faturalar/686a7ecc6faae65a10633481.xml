<Invoice xmlns="urn:oasis:names:specification:ubl:schema:xsd:Invoice-2" xmlns:cac="urn:oasis:names:specification:ubl:schema:xsd:CommonAggregateComponents-2" xmlns:cbc="urn:oasis:names:specification:ubl:schema:xsd:CommonBasicComponents-2" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:ext="urn:oasis:names:specification:ubl:schema:xsd:CommonExtensionComponents-2" xmlns:xades="http://uri.etsi.org/01903/v1.3.2#" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<ext:UBLExtensions>
		<ext:UBLExtension>
			<ext:ExtensionContent><ds:Signature Id="Signature_GNC2025000000287">
<ds:SignedInfo>
<ds:CanonicalizationMethod Algorithm="http://www.w3.org/TR/2001/REC-xml-c14n-20010315#WithComments"/>
<ds:SignatureMethod Algorithm="http://www.w3.org/2001/04/xmldsig-more#rsa-sha256"/>
<ds:Reference Id="Reference-Id-744efee1-7fe0-4a1d-971a-5d99dc0e6e5d" Type="http://uri.etsi.org/01903#SignedProperties" URI="#Signed-Properties-Id-40690c56-7e68-42e0-b07b-1a38a8063d87">
<ds:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>
<ds:DigestValue>RVKVd+/G2dxCTkTjLTLMiHG8VIf8WtSI8rvbFNy3Phc=</ds:DigestValue>
</ds:Reference>
<ds:Reference Id="Reference-Id-b06db129-99a3-4328-bf10-87dd80a6a9da" URI="">
<ds:Transforms>
<ds:Transform Algorithm="http://www.w3.org/2000/09/xmldsig#enveloped-signature"/>
</ds:Transforms>
<ds:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>
<ds:DigestValue>As25fRjh+syB5MG6gO60dSDa6l/cOiBc6v2V+79YpNI=</ds:DigestValue>
</ds:Reference>
</ds:SignedInfo>
<ds:SignatureValue Id="Signature-Value-Id-05ea5df3-b2e3-48cf-89a8-12c74f3f91fd">M4HBBQXuWsqc5RvuMIep1rKYpZMZWq0ID3lBWfm8DUwPVABTf1OUy+JiHKl4bjjipqC911uedqlx
H3SlyE8uh/zX0kBUXPcSw16mjUnQjgY+BLxdM3jKiKlBwh8lp19Vpq8nrdUji7f9t5RcIc6Xq10v
h+Ya3beBqs79kW6E6PF6pMyTubn/wYxIp98zBlYkuttzq8kB1LrAWvQatKq9HQSg0STbqpCqy+I4
yQ8lt/76rLeM0sXQp0KAYSBBFKKvM9Z0xbF6iTglXjlSa+Cnf37UMuGGzKJf3IvTxvs6Bm2KADbR
D+XvyXxNpF3Q+JriPC84m17Z8L6OmaRC6BEvSw==</ds:SignatureValue>
<ds:KeyInfo>
<ds:X509Data>
<ds:X509Certificate>MIIFIzCCBKigAwIBAgIIAOsh5dgrhIowCgYIKoZIzj0EAwMwgdExCzAJBgNVBAYTAlRSMRgwFgYD
VQQHDA9HZWJ6ZSAtIEtvY2FlbGkxRzBFBgNVBAoMPlTDvHJraXllIEJpbGltc2VsIHZlIFRla25v
bG9qaWsgQXJhxZ90xLFybWEgS3VydW11IC0gVMOcQsSwVEFLMRAwDgYDVQQLDAdCxLBMR0VNMU0w
SwYDVQQDDERNYWxpIE3DvGjDvHIgRWxla3Ryb25payBTZXJ0aWZpa2EgSGl6bWV0IFNhxJ9sYXnE
sWPEsXPEsSAtIFPDvHLDvG0gMzAeFw0yMzEyMTkxMDQ2MjBaFw0yNjEyMTgxMDQ2MjBaMGIxEzAR
BgNVBAUTCjk5ODA4NDc5ODAxSzBJBgNVBAMMQlrEsFJWRSBCxLBMR8SwIFRFS05PTE9KxLBMRVLE
sCBTQU5BWcSwIFTEsENBUkVUIEFOT07EsE0gxZ7EsFJLRVTEsDCCASIwDQYJKoZIhvcNAQEBBQAD
ggEPADCCAQoCggEBAMItwzHpNQdoCxuN7HUjSbiMXx7XMXKYYKMjgyzJshv/mnnxatoHkvke81FF
hRh/Nu8jbdmh26y4S+FVpckQSh8ZgAe6SB50n0iGWuaSBhG00hu1zqDS0b6t80IfB8TPGBIprlee
jsi7pIUMn50sv9wo8u/0qlRlGdgDbcw+6BjOKnPDFUBNRSA3yg3lDUJNNompfuGsjKNfDukhOW0Y
sfd0neI5jc4DlePxc5Kedo+QhVTydIiOE6F7Hj8h3fcXHfNVCyV5Kj3OPrlwi697/lr7zcijPXF9
ugV2f5Qk49j9MGYNmQQRljV3fWduntYXJ0EKU3xyZUW4/nNm9nEsTosCAwEAAaOCAgswggIHMB8G
A1UdIwQYMBaAFAY5aBEtBAuAFL23OYKrBMj22Kl8MB0GA1UdDgQWBBQ8EEHe+weN5LPWmVvsHvSM
1e05TTAOBgNVHQ8BAf8EBAMCB4AwgcYGA1UdIASBvjCBuzCBuAYLYIYYAQIBAQUHBAEwgagwKgYI
KwYBBQUHAgEWHmh0dHA6Ly9kZXBvLmthbXVzbS5nb3YudHIvaWxrZTB6BggrBgEFBQcCAjBuDGxC
dSBzZXJ0aWZpa2EgaWxlIGlsZ2lsaSBzZXJ0aWZpa2EgdXlndWxhbWEgZXNhc2xhcsSxbsSxIG9r
dW1hayBpw6dpbiBiZWxpcnRpbGVuIHdlYiBzaXRlc2luaSB6aXlhcmV0IGVkaW5pei4wDAYDVR0T
AQH/BAIwADAWBgNVHSUEDzANBgtghhgBAgEBBQcyATBBBgNVHR8EOjA4MDagNKAyhjBodHRwOi8v
ZGVwby5rYW11c20uZ292LnRyL2t1cnVtc2FsL21tZXNocy1zMy5jcmwwgYIGCCsGAQUFBwEBBHYw
dDA8BggrBgEFBQcwAoYwaHR0cDovL2RlcG8ua2FtdXNtLmdvdi50ci9rdXJ1bXNhbC9tbWVzaHMt
czMuY3J0MDQGCCsGAQUFBzABhihodHRwOi8vY2lzZHVwbW1zMy5rdXJ1bXNhbC5rYW11c20uZ292
LnRyMAoGCCqGSM49BAMDA2kAMGYCMQC1XfSUeJTZCjUph2WyCbxReBkNtnvC8JC/E2RbKEthg86I
GSppZObCBx7O+S9juIICMQD6wgIit5TTNjtIBkhx8NMxs1pZwiLU9uWQmVc3iHemQ2jny03rPu5O
IKME+h/hc4I=</ds:X509Certificate>
<ds:X509SubjectName>CN=ZİRVE BİLGİ TEKNOLOJİLERİ SANAYİ TİCARET ANONİM ŞİRKETİ,SERIALNUMBER=9980847980</ds:X509SubjectName></ds:X509Data>
<ds:KeyValue>
<ds:RSAKeyValue>
<ds:Modulus>AMItwzHpNQdoCxuN7HUjSbiMXx7XMXKYYKMjgyzJshv/mnnxatoHkvke81FFhRh/Nu8jbdmh26y4
S+FVpckQSh8ZgAe6SB50n0iGWuaSBhG00hu1zqDS0b6t80IfB8TPGBIprleejsi7pIUMn50sv9wo
8u/0qlRlGdgDbcw+6BjOKnPDFUBNRSA3yg3lDUJNNompfuGsjKNfDukhOW0Ysfd0neI5jc4DlePx
c5Kedo+QhVTydIiOE6F7Hj8h3fcXHfNVCyV5Kj3OPrlwi697/lr7zcijPXF9ugV2f5Qk49j9MGYN
mQQRljV3fWduntYXJ0EKU3xyZUW4/nNm9nEsTos=</ds:Modulus>
<ds:Exponent>AQAB</ds:Exponent>
</ds:RSAKeyValue>
</ds:KeyValue>
</ds:KeyInfo>
<ds:Object Id="Object-Id-9dc49707-239a-4d54-900a-44f5a34abc5f"><xades:QualifyingProperties Target="#Signature_GNC2025000000287">
<xades:SignedProperties Id="Signed-Properties-Id-40690c56-7e68-42e0-b07b-1a38a8063d87">
<xades:SignedSignatureProperties>
<xades:SigningTime>2025-05-02T10:51:11.232+03:00</xades:SigningTime>
<xades:SigningCertificate>
<xades:Cert>
<xades:CertDigest>
<ds:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>
<ds:DigestValue>BUiunejp7gBQYqaZmMFqnbV2C4Yq7tcz+plyMvdAOnk=</ds:DigestValue>
</xades:CertDigest>
<xades:IssuerSerial>
<ds:X509IssuerName>CN=Mali Mühür Elektronik Sertifika Hizmet Sağlayıcısı - Sürüm 3,OU=BİLGEM,O=Türkiye Bilimsel ve Teknolojik Araştırma Kurumu - TÜBİTAK,L=Gebze - Kocaeli,C=TR</ds:X509IssuerName>
<ds:X509SerialNumber>66183890584962186</ds:X509SerialNumber>
</xades:IssuerSerial>
</xades:Cert>
</xades:SigningCertificate>
<xades:SignerRole>
<xades:ClaimedRoles>
<xades:ClaimedRole>Tedarikçi</xades:ClaimedRole>
</xades:ClaimedRoles>
</xades:SignerRole>
</xades:SignedSignatureProperties>
</xades:SignedProperties>
</xades:QualifyingProperties>
</ds:Object>
</ds:Signature></ext:ExtensionContent>
		</ext:UBLExtension>
	</ext:UBLExtensions>
	<cbc:UBLVersionID>2.1</cbc:UBLVersionID>
	<cbc:CustomizationID>TR1.2</cbc:CustomizationID>
	<cbc:ProfileID>TICARIFATURA</cbc:ProfileID>
	<cbc:ID>GNC2025000000287</cbc:ID>
	<cbc:CopyIndicator>false</cbc:CopyIndicator>
	<cbc:UUID>cc99f721-7542-49c7-ada6-bf4aefca9b80</cbc:UUID>
	<cbc:IssueDate>2025-05-01</cbc:IssueDate>
	<cbc:IssueTime>10:12:39</cbc:IssueTime>
	<cbc:InvoiceTypeCode>TEVKIFAT</cbc:InvoiceTypeCode>
	<cbc:Note>Mersis No: 0396061880700019</cbc:Note>
	<cbc:Note>İRSALİYE YERİNEDE GEÇER.</cbc:Note>
	<cbc:Note>KDV_IST_DAHIL_TUTAR: 1.136.694,00</cbc:Note>
	<cbc:Note>Yazıyla: Yalnız BirMilyonİkiYüzDörtBinSekizYüzDoksanBeş TL AltmışDört Kr</cbc:Note>
	<cbc:DocumentCurrencyCode>TRY</cbc:DocumentCurrencyCode>
	<cbc:LineCountNumeric>1</cbc:LineCountNumeric>
	<cac:ReceiptDocumentReference>
		<cbc:ID/>
		<cbc:IssueDate>2025-05-01</cbc:IssueDate>
	</cac:ReceiptDocumentReference>
	<cac:AdditionalDocumentReference>
		<cbc:ID>f7cd9699-86b6-48f5-8024-ec9ccebbc277</cbc:ID>
		<cbc:IssueDate>2025-05-02</cbc:IssueDate>
		<cbc:DocumentType>XSLT</cbc:DocumentType>
		<cac:Attachment>
			<cbc:EmbeddedDocumentBinaryObject characterSetCode="UTF-8" encodingCode="Base64" filename="GNC2025000000287.xslt" mimeCode="application/xml"></cbc:EmbeddedDocumentBinaryObject>
		</cac:Attachment>
	</cac:AdditionalDocumentReference>
	<cac:AdditionalDocumentReference>
		<cbc:ID>GNC2025000000287</cbc:ID>
		<cbc:IssueDate>2025-05-01</cbc:IssueDate>
		<cbc:DocumentTypeCode>CUST_INV_ID</cbc:DocumentTypeCode>
	</cac:AdditionalDocumentReference>
	<cac:Signature>
		<cbc:ID schemeID="VKN_TCKN">3960618807</cbc:ID>
		<cac:SignatoryParty>
			<cac:PartyIdentification>
				<cbc:ID schemeID="VKN">3960618807</cbc:ID>
			</cac:PartyIdentification>
			<cac:PostalAddress>
				<cbc:StreetName>Büyükkayacık Osb. Mh. 3.Nl. Sk No:15/1</cbc:StreetName>
				<cbc:CitySubdivisionName>SELÇUKLU</cbc:CitySubdivisionName>
				<cbc:CityName>KONYA</cbc:CityName>
				<cbc:PostalZone/>
				<cac:Country>
					<cbc:Name>Türkiye</cbc:Name>
				</cac:Country>
			</cac:PostalAddress>
		</cac:SignatoryParty>
		<cac:DigitalSignatureAttachment>
			<cac:ExternalReference>
				<cbc:URI>#Signature_GNC2025000000287</cbc:URI>
			</cac:ExternalReference>
		</cac:DigitalSignatureAttachment>
	</cac:Signature>
	<cac:AccountingSupplierParty>
		<cac:Party>
			<cbc:WebsiteURI/>
			<cac:PartyIdentification>
				<cbc:ID schemeID="VKN">3960618807</cbc:ID>
			</cac:PartyIdentification>
			<cac:PartyName>
				<cbc:Name>GNC ALÜMİNYUM DIŞ TİC.KORK.SİST.İNŞ.MÜH. LTD. ŞTİ.</cbc:Name>
			</cac:PartyName>
			<cac:PostalAddress>
				<cbc:StreetName>Büyükkayacık Osb. Mh. 3.Nl. Sk No:15/1</cbc:StreetName>
				<cbc:CitySubdivisionName>SELÇUKLU</cbc:CitySubdivisionName>
				<cbc:CityName>KONYA</cbc:CityName>
				<cbc:PostalZone/>
				<cac:Country>
					<cbc:Name>Türkiye</cbc:Name>
				</cac:Country>
			</cac:PostalAddress>
			<cac:PartyTaxScheme>
				<cac:TaxScheme>
					<cbc:Name>SELÇUK VERGİ DAİRESİ</cbc:Name>
				</cac:TaxScheme>
			</cac:PartyTaxScheme>
			<cac:Contact>
				<cbc:Telephone>(332)3551860</cbc:Telephone>
				<cbc:Telefax>()</cbc:Telefax>
				<cbc:ElectronicMail>muhasebe@gncaluminyum.com.tr</cbc:ElectronicMail>
			</cac:Contact>
		</cac:Party>
	</cac:AccountingSupplierParty>
	<cac:AccountingCustomerParty>
		<cac:Party>
			<cbc:WebsiteURI/>
			<cac:PartyIdentification>
				<cbc:ID schemeID="VKN">2650699083</cbc:ID>
			</cac:PartyIdentification>
			<cac:PartyName>
				<cbc:Name>DAĞ MİMARLIK VE MÜHENDİSLİK YAPI GAYRİMENKUL TİC. SAN. A.Ş.</cbc:Name>
			</cac:PartyName>
			<cac:PostalAddress>
				<cbc:Room>1</cbc:Room>
				<cbc:StreetName>SANCAK MAH. BÜYÜKIRMAK SK.</cbc:StreetName>
				<cbc:BuildingName/>
				<cbc:BuildingNumber>2</cbc:BuildingNumber>
				<cbc:CitySubdivisionName>SELÇUKLU</cbc:CitySubdivisionName>
				<cbc:CityName>KONYA</cbc:CityName>
				<cbc:PostalZone/>
				<cbc:Region/>
				<cac:Country>
					<cbc:IdentificationCode>TR</cbc:IdentificationCode>
					<cbc:Name>TÜRKİYE</cbc:Name>
				</cac:Country>
			</cac:PostalAddress>
			<cac:PartyTaxScheme>
				<cac:TaxScheme>
					<cbc:Name>SELÇUK (KONYA) VERGİ DAİRESİ MÜD.</cbc:Name>
				</cac:TaxScheme>
			</cac:PartyTaxScheme>
			<cac:Contact>
				<cbc:Telephone>()</cbc:Telephone>
				<cbc:Telefax>()</cbc:Telefax>
				<cbc:ElectronicMail>info@dagmuhendislik.com</cbc:ElectronicMail>
			</cac:Contact>
		</cac:Party>
	</cac:AccountingCustomerParty>
	<cac:TaxTotal>
		<cbc:TaxAmount currencyID="TRY">68201.64</cbc:TaxAmount>
		<cac:TaxSubtotal>
			<cbc:TaxableAmount currencyID="TRY">1136694.00</cbc:TaxableAmount>
			<cbc:TaxAmount currencyID="TRY">227338.80</cbc:TaxAmount>
			<cbc:CalculationSequenceNumeric>1</cbc:CalculationSequenceNumeric>
			<cbc:Percent>20</cbc:Percent>
			<cac:TaxCategory>
				<cac:TaxScheme>
					<cbc:Name>GERÇEK USULDE KATMA DEĞER VERGİSİ</cbc:Name>
					<cbc:TaxTypeCode>0015</cbc:TaxTypeCode>
				</cac:TaxScheme>
			</cac:TaxCategory>
		</cac:TaxSubtotal>
	</cac:TaxTotal>
	<cac:WithholdingTaxTotal>
		<cbc:TaxAmount currencyID="TRY">159137.16</cbc:TaxAmount>
		<cac:TaxSubtotal>
			<cbc:TaxableAmount currencyID="TRY">227338.80</cbc:TaxableAmount>
			<cbc:TaxAmount currencyID="TRY">159137.16</cbc:TaxAmount>
			<cbc:Percent>70</cbc:Percent>
			<cac:TaxCategory>
				<cac:TaxScheme>
					<cbc:Name>BAKIR, ÇİNKO VE ALÜMİNYUM ÜRÜNLERİNİN TESLİMİ *GT 117-Bölüm (3.3.2)+</cbc:Name>
					<cbc:TaxTypeCode>619</cbc:TaxTypeCode>
				</cac:TaxScheme>
			</cac:TaxCategory>
		</cac:TaxSubtotal>
	</cac:WithholdingTaxTotal>
	<cac:LegalMonetaryTotal>
		<cbc:LineExtensionAmount currencyID="TRY">1136694.00</cbc:LineExtensionAmount>
		<cbc:TaxExclusiveAmount currencyID="TRY">1136694.00</cbc:TaxExclusiveAmount>
		<cbc:TaxInclusiveAmount currencyID="TRY">1364032.80</cbc:TaxInclusiveAmount>
		<cbc:AllowanceTotalAmount currencyID="TRY">0.00</cbc:AllowanceTotalAmount>
		<cbc:PayableAmount currencyID="TRY">1204895.64</cbc:PayableAmount>
	</cac:LegalMonetaryTotal>
	<cac:InvoiceLine>
		<cbc:ID>1</cbc:ID>
		<cbc:Note>Birim:KG</cbc:Note>
		<cbc:Note>DigerVergiToplami:159137,16</cbc:Note>
		<cbc:Note>OzelKod_2:401.04</cbc:Note>
		<cbc:Note>Birim_1:KG</cbc:Note>
		<cbc:Note>Birim1_Miktar:6422</cbc:Note>
		<cbc:Note>Birim_2:ADET</cbc:Note>
		<cbc:Note>Birim2_Oran:1</cbc:Note>
		<cbc:Note>Birim2_Miktar:6422</cbc:Note>
		<cbc:InvoicedQuantity unitCode="KGM">6422.00</cbc:InvoicedQuantity>
		<cbc:LineExtensionAmount currencyID="TRY">1136694.00</cbc:LineExtensionAmount>
		<cac:TaxTotal>
			<cbc:TaxAmount currencyID="TRY">68201.64</cbc:TaxAmount>
			<cac:TaxSubtotal>
				<cbc:TaxableAmount currencyID="TRY">1136694.00</cbc:TaxableAmount>
				<cbc:TaxAmount currencyID="TRY">227338.80</cbc:TaxAmount>
				<cbc:CalculationSequenceNumeric>1</cbc:CalculationSequenceNumeric>
				<cbc:Percent>20</cbc:Percent>
				<cac:TaxCategory>
					<cac:TaxScheme>
						<cbc:Name>KDV</cbc:Name>
						<cbc:TaxTypeCode>0015</cbc:TaxTypeCode>
					</cac:TaxScheme>
				</cac:TaxCategory>
			</cac:TaxSubtotal>
		</cac:TaxTotal>
		<cac:WithholdingTaxTotal>
			<cbc:TaxAmount currencyID="TRY">159137.16</cbc:TaxAmount>
			<cac:TaxSubtotal>
				<cbc:TaxableAmount currencyID="TRY">227338.80</cbc:TaxableAmount>
				<cbc:TaxAmount currencyID="TRY">159137.16</cbc:TaxAmount>
				<cbc:Percent>70</cbc:Percent>
				<cac:TaxCategory>
					<cac:TaxScheme>
						<cbc:Name>BAKIR, ÇİNKO VE ALÜMİNYUM ÜRÜNLERİNİN TESLİMİ *GT 117-Bölüm (3.3.2)+</cbc:Name>
						<cbc:TaxTypeCode>619</cbc:TaxTypeCode>
					</cac:TaxScheme>
				</cac:TaxCategory>
			</cac:TaxSubtotal>
		</cac:WithholdingTaxTotal>
		<cac:Item>
			<cbc:Name>ALÜMİNYUM BOYALI PROFİL</cbc:Name>
			<cac:SellersItemIdentification>
				<cbc:ID>S.0003</cbc:ID>
			</cac:SellersItemIdentification>
		</cac:Item>
		<cac:Price>
			<cbc:PriceAmount currencyID="TRY">177.00000000</cbc:PriceAmount>
		</cac:Price>
	</cac:InvoiceLine>
</Invoice>